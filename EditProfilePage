import React, {useState} from 'react';
// import {Picker} from '@react-native-picker/picker'
import { StyleSheet, Text, View, Image, TextInput, Button, TouchableOpacity, TouchableWithoutFeedback, ImageBackground, ScrollView } from 'react-native';
import Icon from 'react-native-vector-icons/FontAwesome';
import Head from './head';
import NavBar from './navBar';
// import SelectMultiple from 'react-native-select-multiple'
import { CheckBox } from 'react-native-elements';


const Profile_Page_Edit = () => {
  
  const [userData, setData] = useState({ 
    user_name: '', 
    DOB: '',
    email: '',
    address: '',
    medicalCondition_detail:'' 
  });

  const [name, setName] = useState(true);
  const [dob, setDOB] = useState(true);
  const [email, setEmail] = useState(true);
  const [address, setAddress] = useState(true);
  const [medicalCondition, setMedicalCondition] = useState(true);
  const handelEditPress = () => {

  }
  const [checkboxes, setCheckboxes] = useState([
    { name: 'Checkbox 1', checked: false },
    { name: 'Checkbox 2', checked: false },
    { name: 'Checkbox 3', checked: false },
    { name: 'Checkbox 4', checked: false },
    { name: 'Checkbox 5', checked: false },
    { name: 'Checkbox 6', checked: false },
    { name: 'Checkbox 7', checked: false },
    { name: 'Checkbox 8', checked: false },
    { name: 'Checkbox 9', checked: false },
    { name: 'Checkbox 10', checked: false },
    { name: 'Checkbox 11', checked: false },
  ]);
  const handleCheckboxChange = (index) => {
    const newCheckboxes = [...checkboxes];
    newCheckboxes[index].checked = !newCheckboxes[index].checked;
    setCheckboxes(newCheckboxes);
  };
  // const [toggleCheckBox, setToggleCheckBox] = useState(false)
  // const [isSelected, setSelection] = useState(false);
  // const Triggers = [
  //   { label: 'Mould', value: 'M' },
  //   { label: 'Hay Fever', value: 'HF' },
  //   { label: 'Air Quality', value: 'AQ' },
  //   { label: 'Extreme Weather', value: 'EW' },
  //   { label: 'Colds', value: 'C' },
  //   { label: 'Cold air', value: 'CA' },
  //   { label: 'Ciggrette smoke', value: 'CS' },
  //   { label: 'Viruses', value: 'V' },
  //   { label: 'Gardening', value: 'G' },
  //   { label: 'Animals', value: 'A' },
  //   { label: 'Others', value: 'O' }
  // ]

  // state = {selectedFruits: [] }

  // onSelectionsChange = (selectedTriggers) => {
  //   this.setState({ selectedTriggers })
  // }
  // const [isChecked1, setIsChecked1] = useState(false);
  // const [isChecked2, setIsChecked2] = useState(false);

  // const handleToggle1 = () => {
  //   setIsChecked1(!isChecked1);
  // };

  // const handleToggle2 = () => {
  //   setIsChecked2(!isChecked2);
  // };

  return (
    <ScrollView>
      <ImageBackground style={styles.container} source={require("./img_and_icon/drawable-hdpi/Rectangle.png")}>
    
      <Head />

        <Text style={styles.profile}>Profile</Text>

        <Image 
        source={require("./img_and_icon/drawable-hdpi/ProfileIcon.png")}
        style = {styles.icon}
        />

        <View style={styles.body}>

        <Text style={styles.name}>Name</Text>
        <View style={styles.inputContainer}>
          <TextInput
            style={styles.textBox}
            onChangeText={(inputText) => setText(inputText)}
            value={name}
            placeholder="Username"
          />
            
          <View>
            {/* <TouchableOpacity onPress={handelEditPress}>
              <Icon name="edit" size={20} color="#555" />
            </TouchableOpacity> */}
            <TouchableOpacity onPress={() => alert('changed')}
                      activeOpacity={0.5}>
                      <Image source={require('./img_and_icon/drawable-hdpi/EditButton.png')} 
                      style={styles.editbtnName} 
                      resizeMode='stretch'
                      />
            </TouchableOpacity>
          </View>
        </View>
        <Text style={styles.DOB}>DOB</Text>
        <View style={styles.inputContainer}>
          <TextInput
            style={styles.textBox}
            onChangeText={(inputText) => setText(inputText)}
            value={dob}
            placeholder="DD/MM/YY"
          />
          <View>
              <TouchableOpacity onPress={() => alert('changed')}
                        activeOpacity={0.5}>
                        <Image source={require('./img_and_icon/drawable-hdpi/EditButton.png')} 
                        style={styles.editbtnDOB} 
                        resizeMode='stretch'
                        />
              </TouchableOpacity>
            </View>
          </View>
        <Text style={styles.email}>Email</Text>
        <View style={styles.inputContainer}>
        <TextInput
          style={styles.textBox}
          onChangeText={(inputText) => setText(inputText)}
          value={email}
          placeholder="email@gmail.com"
        />
          <View>
            <TouchableOpacity onPress={() => alert('changed')}
                      activeOpacity={0.5}>
                      <Image source={require('./img_and_icon/drawable-hdpi/EditButton.png')} 
                      style={styles.editbtnEmail} 
                      resizeMode='stretch'
                      />
            </TouchableOpacity>
          </View>
        </View>
        <Text style={styles.address}>Address</Text>
        <View style={styles.inputContainer}>
          <TextInput
            style={styles.textBox}
            onChangeText={(inputText) => setText(inputText)}
            value={address}
            placeholder="Street name, Suburb, State"
          />
          <View>
            <TouchableOpacity onPress={() => alert('changed')}
                      activeOpacity={0.5}>
                      <Image source={require('./img_and_icon/drawable-hdpi/EditButton.png')} 
                      style={styles.editbtnAddress} 
                      resizeMode='stretch'
                      />
            </TouchableOpacity>
          </View>
          </View>
        <Text style={styles.medicalCondition}>Medical/Condition Details</Text>
        <View style={styles.inputContainer}>
          <TextInput
            style={styles.textBox}
            onChangeText={(inputText) => setText(inputText)}
            value={medicalCondition}
            placeholder="Details"
          />
          <View>
            <TouchableOpacity onPress={() => alert('changed')}
                      activeOpacity={0.5}>
                      <Image source={require('./img_and_icon/drawable-hdpi/EditButton.png')} 
                      style={styles.editbtnMC} 
                      resizeMode='stretch'
                      />
            </TouchableOpacity>
          </View>
          </View>
        <Text style={styles.asthamaTriggers}>Asthama Triggers</Text>
        <View style={styles.checkbox}>
          {checkboxes.map((checkbox, index) => (
            <View key={index} style={styles.checkboxContainer}>
              <CheckBox
                value={checkbox.checked}  
                onValueChange={() => handelCheckboxChange(index)}
              />
              <Text style={styles.checkboxName}>High Humidity</Text>
            </View>  
          ))} 
        </View>

        {/* <View>
          <TouchableWithoutFeedback onPress={handleToggle1}>
            <View style={{ flexDirection: 'row', alignItems: 'center' }}>
              <CheckBox
                value={isChecked1}
                onValueChange={handleToggle1}
              />
              <Text style={{ marginLeft: 8 }}>Checkbox label 1</Text>
            </View>
          </TouchableWithoutFeedback>
          <TouchableWithoutFeedback onPress={handleToggle2}>
            <View style={{ flexDirection: 'row', alignItems: 'center' }}>
              <CheckBox
                value={isChecked2}
                onValueChange={handleToggle2}
              />
              <Text style={{ marginLeft: 8 }}>Checkbox label 2</Text>
            </View>
          </TouchableWithoutFeedback>
        </View> */}
        <View style={styles.empty}>
          <Text></Text>
        </View>
        </View>
        <NavBar />
      </ImageBackground>
    </ScrollView>
  );
};

const styles = StyleSheet.create({
  container: {
    flex: 1,
    // backgroundColor: '#F0F3F5',
    alignItems: 'center',
  },
  profile: {
    fontSize: 25, 
    fontWeight: 'bold',  
    marginTop: 20, 
  },
  icon: {
    alignItems: 'center',
    justifyContent: 'center',
    marginTop: 10,
  },
  body: {
    
  },
  editbtnName: {
    width: 20,
    height: 20,
    marginLeft: 220,
  },
  editbtnDOB: {
    width: 20,
    height: 20,
    marginLeft: 212,
  },
  editbtnEmail:{
    width: 20,
    height: 20,
    marginLeft: 170,
  },
  editbtnAddress:{
    width: 20,
    height: 20,
    marginLeft: 115,
  },
  editbtnMC:{
    width: 20,
    height: 20,
    marginLeft: 240,
  },
  name: {
    fontSize: 24,
    fontWeight: 'bold',
  },
  inputContainer: {
    flexDirection: 'row',
    alignItems: 'center',
    borderBottomColor: 'black',
    borderBottomWidth: 1,
    marginBottom: 10,
  },
  DOB: {
    fontSize: 24,
    fontWeight: 'bold',
    marginBottom: 10,
  },
  email: {
    fontSize: 24,
    fontWeight: 'bold',
    marginBottom: 10,
  },
  address: {
    fontSize: 24,
    fontWeight: 'bold',
    marginBottom: 10,
  },
  medicalCondition: {
    fontSize: 24,
    fontWeight: 'bold',
    marginBottom: 10,
  },
  asthamaTriggers: {
    fontSize: 24,
    fontWeight: 'bold',
    marginBottom: 10,
  },
  checkboxContainer: {
    flexDirection: 'row',
  },
  checkboxes: {
    borderColor: 'black',
  },
  checkboxName: {
    marginTop: 15,
    fontSize: 18,
    marginLeft: -15,
  },
  empty: {
    marginBottom: 70,
  },
});

export default Profile_Page_Edit;
